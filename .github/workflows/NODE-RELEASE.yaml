name: RELEASE
# Set the UI name
run-name: Node build and publish Docker image
# Controls when the workflow will run
on: [workflow_call]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow builds the app!
  release:
    if: contains(github.event.head_commit.message, '[release]') == true
    # Set github UI name
    name: Node Docker builder
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Code Checkout
      - name: Code Checkout
        uses: actions/checkout@v3
      # Variables related to the project
      # Get version
      - name: Extract Version
        run: echo "version=$(cat package.json | jq -r .version)" >> $GITHUB_OUTPUT
        id: project
      #
      # Docker build
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      #
      # Setup DockerHub
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      #
      # Setup Github Secure Registry
      - name: Login to GitHub
        uses: docker/login-action@v2 
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      #
      # Docker image metadata
      - name: Build Docker metadata
        id: meta
        uses: docker/metadata-action@v4
        with:
          labels: |
            tech.bananaz.maintainer=contact@bananaz.tech
          tags: |
            type=semver,pattern={{version}},value=${{ steps.project.outputs.version }}
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}
            ghcr.io/${{ github.repository }}
      #
      # Docker build image and push
      - name: Build Dockerfile and Push
        id: docker_build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}